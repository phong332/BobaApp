["#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat0.xyz = u_xlat0.xyw * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD0.xy = u_xlat0.zz + u_xlat0.xy;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FlipTex;\nuniform \tvec4 _colors[10];\nuniform \tfloat _cutoffs[10];\nuniform \tfloat _multipliers[10];\nuniform \tvec4 _fresnels[10];\nuniform \tfloat _styles[10];\nuniform \tfloat _mags[10];\nuniform \tfloat _speeds[10];\nuniform \tvec4 background;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _BackgroundTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nvec4 u_xlat2;\nbvec3 u_xlatb2;\nvec3 u_xlat3;\nmediump vec4 u_xlat16_3;\nbvec3 u_xlatb3;\nvec4 u_xlat4;\nbvec3 u_xlatb4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nvec4 u_xlat7;\nvec4 u_xlat8;\nvec4 u_xlat9;\nvec4 u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nint u_xlati24;\nvec2 u_xlat25;\nfloat u_xlat28;\nfloat u_xlat36;\nint u_xlati36;\nbool u_xlatb36;\nfloat u_xlat37;\nbool u_xlatb38;\nfloat u_xlat39;\nfloat u_xlat40;\n#define UNITY_DYNAMIC_INDEX_ES2 0\n\n\n\n\n\n\n\n\n\nvec4 _colorsDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _colors[i];\n#else\n#define d_ar _colors\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nfloat _stylesDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _styles[i];\n#else\n#define d_ar _styles\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nfloat _cutoffsDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _cutoffs[i];\n#else\n#define d_ar _cutoffs\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nfloat _multipliersDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _multipliers[i];\n#else\n#define d_ar _multipliers\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nvec4 _fresnelsDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _fresnels[i];\n#else\n#define d_ar _fresnels\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nfloat _magsDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _mags[i];\n#else\n#define d_ar _mags\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\n\nfloat _speedsDynamicIndex(int i){\n#if UNITY_DYNAMIC_INDEX_ES2\n    return _speeds[i];\n#else\n#define d_ar _speeds\n    if (i <= 0) return d_ar[0]; else if (i == 1) return d_ar[1]; else if (i == 2) return d_ar[2]; else if (i == 3) return d_ar[3]; else if (i == 4) return d_ar[4]; else if (i == 5) return d_ar[5]; else if (i == 6) return d_ar[6]; else if (i == 7) return d_ar[7]; else if (i == 8) return d_ar[8]; else if (i == 9) return d_ar[9];\n    return d_ar[0];\n#undef d_ar\n#endif\n}\n\nvoid main()\n{\n    u_xlatb0 = _FlipTex==1.0;\n    u_xlat12 = (-vs_TEXCOORD0.y) + 1.0;\n    u_xlat0.y = (u_xlatb0) ? u_xlat12 : vs_TEXCOORD0.y;\n    u_xlat0.x = vs_TEXCOORD0.x;\n    u_xlat10_1 = texture2D(_MainTex, u_xlat0.xy);\n    u_xlat24 = (-u_xlat10_1.w) + 1.0;\n    u_xlat2.xyz = (-vec3(u_xlat24)) * background.xyz + u_xlat10_1.xyz;\n    u_xlat2.xyz = u_xlat2.xyz / u_xlat10_1.www;\n    u_xlati24 = int(0);\n    u_xlati36 = int(0);\n    for(int u_xlati_while_true_0 = 0 ; u_xlati_while_true_0 < 0x7FFF ; u_xlati_while_true_0++){\n        u_xlatb38 = u_xlati36>=10;\n        if(u_xlatb38){break;}\n        u_xlat3.xyz = u_xlat2.xyz + (-_colorsDynamicIndex(u_xlati36).xyz);\n        u_xlatb4.xyz = lessThan(u_xlat3.xyzx, vec4(0.0, 0.0, 0.0, 0.0)).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat3;\n            hlslcc_movcTemp.x = (u_xlatb4.x) ? (-u_xlat3.x) : u_xlat3.x;\n            hlslcc_movcTemp.y = (u_xlatb4.y) ? (-u_xlat3.y) : u_xlat3.y;\n            hlslcc_movcTemp.z = (u_xlatb4.z) ? (-u_xlat3.z) : u_xlat3.z;\n            u_xlat3 = hlslcc_movcTemp;\n        }\n        u_xlatb3.xyz = lessThan(u_xlat3.xyzx, vec4(0.0199999996, 0.0199999996, 0.0199999996, 0.0)).xyz;\n        u_xlatb38 = u_xlatb3.y && u_xlatb3.x;\n        u_xlatb38 = u_xlatb3.z && u_xlatb38;\n        if(u_xlatb38){\n            u_xlati24 = u_xlati36;\n            break;\n        }\n        u_xlati36 = u_xlati36 + 1;\n        u_xlati24 = 0;\n    }\n    u_xlatb2.xyz = equal(vec4(0.0, 2.0, 1.0, 0.0), vec4(_stylesDynamicIndex(u_xlati24))).xyz;\n    if(u_xlatb2.x){\n        u_xlatb36 = u_xlat10_1.w<_cutoffsDynamicIndex(u_xlati24);\n        if(u_xlatb36){\n            u_xlat16_3.w = 0.0;\n        } else {\n            u_xlat39 = u_xlat10_1.w * _multipliersDynamicIndex(u_xlati24);\n            u_xlat16_3.w = u_xlat39;\n        }\n        u_xlat36 = 1.0 + (-_fresnelsDynamicIndex(u_xlati24).w);\n        u_xlat36 = (-u_xlat36) * u_xlat16_3.w + 1.0;\n        u_xlat36 = clamp(u_xlat36, 0.0, 1.0);\n        u_xlat36 = u_xlat36 * u_xlat36;\n        u_xlat3.xyz = vec3(u_xlat36) * _fresnelsDynamicIndex(u_xlati24).xyz + u_xlat10_1.xyz;\n        u_xlat16_3.xyz = u_xlat3.xyz;\n    } else {\n        u_xlat16_3 = u_xlat10_1;\n    }\n    if(u_xlatb2.y){\n        u_xlatb36 = u_xlat16_3.w<_cutoffsDynamicIndex(u_xlati24);\n        if(u_xlatb36){\n            u_xlat16_3.w = 0.0;\n        } else {\n            u_xlat39 = u_xlat16_3.w * _multipliersDynamicIndex(u_xlati24);\n            u_xlat16_3.w = u_xlat39;\n        }\n        u_xlatb36 = 0.0<u_xlat16_3.w;\n        u_xlat1.x = _cutoffsDynamicIndex(u_xlati24) * _multipliersDynamicIndex(u_xlati24);\n        u_xlat1.x = u_xlat1.x * 1.5;\n        u_xlatb1 = u_xlat16_3.w<u_xlat1.x;\n        u_xlatb36 = u_xlatb36 && u_xlatb1;\n        if(u_xlatb36){\n            u_xlat16_3.xyz = _fresnelsDynamicIndex(u_xlati24).xyz;\n            u_xlat16_3.w = 1.0;\n        } else {\n            u_xlatb36 = _cutoffsDynamicIndex(u_xlati24)<u_xlat16_3.w;\n            if(u_xlatb36){\n                u_xlat16_3.xyz = _colorsDynamicIndex(u_xlati24).xyz;\n            }\n        }\n    }\n    if(u_xlatb2.z){\n        u_xlatb36 = u_xlat16_3.w<_cutoffsDynamicIndex(u_xlati24);\n        if(u_xlatb36){\n            SV_Target0.xyz = u_xlat16_3.xyz;\n            SV_Target0.w = 0.0;\n        } else {\n            u_xlat1 = u_xlat0.xyxy * vec4(8.0, 8.0, 8.0, 8.0);\n            u_xlat2 = u_xlat1.zwzw * vec4(_magsDynamicIndex(u_xlati24)) + vec4(4.0, 4.0, 4.0, 4.0);\n            u_xlat4 = _Time.yyyy * vec4(0.300000012, -0.400000006, 0.100000001, 0.5);\n            u_xlat5 = u_xlat4 * vec4(_speedsDynamicIndex(u_xlati24));\n            u_xlat1 = u_xlat1 * vec4(_magsDynamicIndex(u_xlati24)) + u_xlat5;\n            u_xlat5 = floor(u_xlat1);\n            u_xlat1 = fract(u_xlat1);\n            u_xlat36 = dot(u_xlat5.xy, vec2(12.9898005, 78.2330017));\n            u_xlat36 = sin(u_xlat36);\n            u_xlat36 = u_xlat36 * 43758.5469;\n            u_xlat36 = fract(u_xlat36);\n            u_xlat6 = u_xlat5.xyxy + vec4(1.0, 0.0, 0.0, 1.0);\n            u_xlat6.x = dot(u_xlat6.xy, vec2(12.9898005, 78.2330017));\n            u_xlat6.x = sin(u_xlat6.x);\n            u_xlat6.x = u_xlat6.x * 43758.5469;\n            u_xlat18 = dot(u_xlat6.zw, vec2(12.9898005, 78.2330017));\n            u_xlat18 = sin(u_xlat18);\n            u_xlat6.y = u_xlat18 * 43758.5469;\n            u_xlat6.xy = fract(u_xlat6.xy);\n            u_xlat7 = u_xlat5 + vec4(1.0, 1.0, 1.0, 0.0);\n            u_xlat5.x = dot(u_xlat7.xy, vec2(12.9898005, 78.2330017));\n            u_xlat5.x = sin(u_xlat5.x);\n            u_xlat5.x = u_xlat5.x * 43758.5469;\n            u_xlat5.x = fract(u_xlat5.x);\n            u_xlat8 = u_xlat1 * u_xlat1;\n            u_xlat1 = (-u_xlat1) * vec4(2.0, 2.0, 2.0, 2.0) + vec4(3.0, 3.0, 3.0, 3.0);\n            u_xlat9 = u_xlat1 * u_xlat8;\n            u_xlat13 = (-u_xlat36) + u_xlat6.x;\n            u_xlat13 = u_xlat9.x * u_xlat13 + u_xlat36;\n            u_xlat36 = (-u_xlat36) + u_xlat6.y;\n            u_xlat36 = u_xlat9.y * u_xlat36;\n            u_xlat1.xz = (-u_xlat8.xz) * u_xlat1.xz + vec2(1.0, 1.0);\n            u_xlat36 = u_xlat36 * u_xlat1.x + u_xlat13;\n            u_xlat1.x = (-u_xlat6.x) + u_xlat5.x;\n            u_xlat1.x = u_xlat9.x * u_xlat1.x;\n            u_xlat1.x = u_xlat1.x * u_xlat9.y + u_xlat36;\n            u_xlat2 = u_xlat4 * vec4(_speedsDynamicIndex(u_xlati24)) + u_xlat2;\n            u_xlat4 = floor(u_xlat2);\n            u_xlat2 = fract(u_xlat2);\n            u_xlat36 = dot(u_xlat4.xy, vec2(12.9898005, 78.2330017));\n            u_xlat36 = sin(u_xlat36);\n            u_xlat36 = u_xlat36 * 43758.5469;\n            u_xlat36 = fract(u_xlat36);\n            u_xlat6 = u_xlat4.xyxy + vec4(1.0, 0.0, 0.0, 1.0);\n            u_xlat37 = dot(u_xlat6.xy, vec2(12.9898005, 78.2330017));\n            u_xlat37 = sin(u_xlat37);\n            u_xlat37 = u_xlat37 * 43758.5469;\n            u_xlat37 = fract(u_xlat37);\n            u_xlat5.x = dot(u_xlat6.zw, vec2(12.9898005, 78.2330017));\n            u_xlat5.x = sin(u_xlat5.x);\n            u_xlat5.x = u_xlat5.x * 43758.5469;\n            u_xlat5.x = fract(u_xlat5.x);\n            u_xlat6 = u_xlat4 + vec4(1.0, 1.0, 1.0, 0.0);\n            u_xlat4.x = dot(u_xlat6.xy, vec2(12.9898005, 78.2330017));\n            u_xlat4.x = sin(u_xlat4.x);\n            u_xlat4.x = u_xlat4.x * 43758.5469;\n            u_xlat4.x = fract(u_xlat4.x);\n            u_xlat8 = u_xlat2 * u_xlat2;\n            u_xlat2 = (-u_xlat2) * vec4(2.0, 2.0, 2.0, 2.0) + vec4(3.0, 3.0, 3.0, 3.0);\n            u_xlat10 = u_xlat2 * u_xlat8;\n            u_xlat16 = (-u_xlat36) + u_xlat37;\n            u_xlat16 = u_xlat10.x * u_xlat16 + u_xlat36;\n            u_xlat36 = (-u_xlat36) + u_xlat5.x;\n            u_xlat36 = u_xlat10.y * u_xlat36;\n            u_xlat5.xy = (-u_xlat8.xz) * u_xlat2.xz + vec2(1.0, 1.0);\n            u_xlat36 = u_xlat36 * u_xlat5.x + u_xlat16;\n            u_xlat37 = (-u_xlat37) + u_xlat4.x;\n            u_xlat37 = u_xlat10.x * u_xlat37;\n            u_xlat1.y = u_xlat37 * u_xlat10.y + u_xlat36;\n            u_xlat1.xy = u_xlat1.xy + vec2(-0.5, -0.5);\n            u_xlat36 = dot(u_xlat5.zw, vec2(12.9898005, 78.2330017));\n            u_xlat36 = sin(u_xlat36);\n            u_xlat36 = u_xlat36 * 43758.5469;\n            u_xlat36 = fract(u_xlat36);\n            u_xlat37 = dot(u_xlat7.zw, vec2(12.9898005, 78.2330017));\n            u_xlat37 = sin(u_xlat37);\n            u_xlat37 = u_xlat37 * 43758.5469;\n            u_xlat37 = fract(u_xlat37);\n            u_xlat2 = u_xlat5.zwzw + vec4(0.0, 1.0, 1.0, 1.0);\n            u_xlat4.x = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));\n            u_xlat4.x = sin(u_xlat4.x);\n            u_xlat4.x = u_xlat4.x * 43758.5469;\n            u_xlat16 = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));\n            u_xlat16 = sin(u_xlat16);\n            u_xlat4.y = u_xlat16 * 43758.5469;\n            u_xlat4.xy = fract(u_xlat4.xy);\n            u_xlat5.x = (-u_xlat36) + u_xlat37;\n            u_xlat5.x = u_xlat9.z * u_xlat5.x + u_xlat36;\n            u_xlat36 = (-u_xlat36) + u_xlat4.x;\n            u_xlat36 = u_xlat9.w * u_xlat36;\n            u_xlat36 = u_xlat36 * u_xlat1.z + u_xlat5.x;\n            u_xlat25.x = (-u_xlat37) + u_xlat4.y;\n            u_xlat25.x = u_xlat9.z * u_xlat25.x;\n            u_xlat4.x = u_xlat25.x * u_xlat9.w + u_xlat36;\n            u_xlat36 = dot(u_xlat4.zw, vec2(12.9898005, 78.2330017));\n            u_xlat36 = sin(u_xlat36);\n            u_xlat36 = u_xlat36 * 43758.5469;\n            u_xlat36 = fract(u_xlat36);\n            u_xlat25.x = dot(u_xlat6.zw, vec2(12.9898005, 78.2330017));\n            u_xlat25.x = sin(u_xlat25.x);\n            u_xlat25.x = u_xlat25.x * 43758.5469;\n            u_xlat2 = u_xlat4.zwzw + vec4(0.0, 1.0, 1.0, 1.0);\n            u_xlat37 = dot(u_xlat2.xy, vec2(12.9898005, 78.2330017));\n            u_xlat37 = sin(u_xlat37);\n            u_xlat25.y = u_xlat37 * 43758.5469;\n            u_xlat25.xy = fract(u_xlat25.xy);\n            u_xlat28 = dot(u_xlat2.zw, vec2(12.9898005, 78.2330017));\n            u_xlat28 = sin(u_xlat28);\n            u_xlat28 = u_xlat28 * 43758.5469;\n            u_xlat28 = fract(u_xlat28);\n            u_xlat40 = (-u_xlat36) + u_xlat25.x;\n            u_xlat40 = u_xlat10.z * u_xlat40 + u_xlat36;\n            u_xlat36 = (-u_xlat36) + u_xlat25.y;\n            u_xlat36 = u_xlat10.w * u_xlat36;\n            u_xlat36 = u_xlat36 * u_xlat5.y + u_xlat40;\n            u_xlat25.x = (-u_xlat25.x) + u_xlat28;\n            u_xlat25.x = u_xlat10.z * u_xlat25.x;\n            u_xlat4.y = u_xlat25.x * u_xlat10.w + u_xlat36;\n            u_xlat1.xy = u_xlat1.xy + u_xlat4.xy;\n            u_xlat1.xy = u_xlat1.xy + vec2(-0.5, -0.5);\n            u_xlat1.xy = u_xlat1.xy * vec2(0.0166666675, 0.0166666675);\n            u_xlat36 = 1.0 + (-_fresnelsDynamicIndex(u_xlati24).w);\n            u_xlat36 = (-u_xlat36) * u_xlat16_3.w + 1.0;\n            u_xlat36 = clamp(u_xlat36, 0.0, 1.0);\n            u_xlat36 = u_xlat36 * u_xlat36;\n            u_xlat4.xyz = vec3(u_xlat36) * _fresnelsDynamicIndex(u_xlati24).xyz + u_xlat16_3.xyz;\n            u_xlat0.xy = u_xlat0.xy + vec2(-0.5, -0.5);\n            u_xlat0.xy = u_xlat0.xy * vec2(0.99000001, 0.99000001) + u_xlat1.xy;\n            u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);\n            u_xlat10_0.xyw = texture2D(_BackgroundTex, u_xlat0.xy).xyz;\n            u_xlat24 = 0.5 * _multipliersDynamicIndex(u_xlati24);\n            u_xlat1.xyz = (-u_xlat10_0.xyw) + u_xlat4.xyz;\n            u_xlat0.xyz = vec3(u_xlat24) * u_xlat1.xyz + u_xlat10_0.xyw;\n            u_xlat16_11.xyz = u_xlat0.xyz + vec3(-0.5, -0.5, -0.5);\n            SV_Target0.xyz = u_xlat16_11.xyz * vec3(1.39999998, 1.39999998, 1.39999998) + vec3(0.5, 0.5, 0.5);\n            SV_Target0.w = 1.0;\n        }\n    } else {\n        SV_Target0 = u_xlat16_3;\n    }\n    return;\n}\n\n"]